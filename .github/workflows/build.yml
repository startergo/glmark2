name: build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  workflow_dispatch:

jobs:
  build-meson:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson libdrm-dev libgbm-dev libudev-dev libwayland-dev wayland-protocols libx11-dev
    - name: Setup
      run: meson setup build -Dflavors=x11-gl,x11-glesv2,x11-gl-egl,wayland-gl,wayland-glesv2,drm-gl,drm-glesv2,null-gl,null-glesv2
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux-all-flavors
        cp -r /tmp/glmark2-install/* artifacts/linux-all-flavors/
        cp build/src/glmark2-* artifacts/linux-all-flavors/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-linux-all-flavors
        path: artifacts/linux-all-flavors/

  build-meson-only-drm:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson libdrm-dev libgbm-dev libudev-dev
    - name: Setup
      run: meson setup build -Dflavors=drm-gl,drm-glesv2
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux-drm-only
        cp -r /tmp/glmark2-install/* artifacts/linux-drm-only/
        cp build/src/glmark2-* artifacts/linux-drm-only/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-linux-drm-only
        path: artifacts/linux-drm-only/

  build-meson-only-wayland:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson libwayland-dev wayland-protocols
    - name: Setup
      run: meson setup build -Dflavors=wayland-gl,wayland-glesv2
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux-wayland-only
        cp -r /tmp/glmark2-install/* artifacts/linux-wayland-only/
        cp build/src/glmark2-* artifacts/linux-wayland-only/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-linux-wayland-only
        path: artifacts/linux-wayland-only/

  build-meson-only-x11:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson libx11-dev
    - name: Setup
      run: meson setup build -Dflavors=x11-gl,x11-glesv2,x11-gl-egl
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux-x11-only
        cp -r /tmp/glmark2-install/* artifacts/linux-x11-only/
        cp build/src/glmark2-* artifacts/linux-x11-only/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-linux-x11-only
        path: artifacts/linux-x11-only/

  build-meson-only-null:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson
    - name: Setup
      run: meson setup build -Dflavors=null-gl,null-glesv2
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux-null-only
        cp -r /tmp/glmark2-install/* artifacts/linux-null-only/
        cp build/src/glmark2-* artifacts/linux-null-only/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-linux-null-only
        path: artifacts/linux-null-only/

  build-meson-only-dispmanx:
    runs-on: ubuntu-22.04-arm
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson libraspberrypi-dev
    - name: Setup
      run: meson setup build -Dflavors=dispmanx-glesv2
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/linux-dispmanx-only
        cp -r /tmp/glmark2-install/* artifacts/linux-dispmanx-only/
        cp build/src/glmark2-* artifacts/linux-dispmanx-only/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-linux-dispmanx-only
        path: artifacts/linux-dispmanx-only/

  build-meson-win32-mingw:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v4
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install meson mingw-w64
    - name: Setup
      run: meson setup --cross-file .github/x86_64-w64-mingw32.txt build -Dflavors=win32-gl,win32-glesv2
    - name: Build
      run: ninja -C build
    - name: Install
      run: DESTDIR=/tmp/glmark2-install ninja -C build install
    - name: Create artifact directory
      run: |
        mkdir -p artifacts/windows-mingw
        cp -r /tmp/glmark2-install/* artifacts/windows-mingw/
        cp build/src/glmark2*.exe artifacts/windows-mingw/ 2>/dev/null || true
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-windows-mingw
        path: artifacts/windows-mingw/

  build-meson-win32-msvc:
    runs-on: windows-2019
    steps:
    - uses: actions/checkout@v4
    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'
    - name: Install meson
      run: pip install meson ninja
    - name: Setup
      run: meson setup --vsenv build -Dflavors='win32-gl,win32-glesv2'
    - name: Build
      run: meson compile -C build
    - name: Install
      run: meson install -C build --destdir ../glmark2-install
    - name: Create artifact directory
      run: |
        mkdir artifacts\windows-msvc
        xcopy glmark2-install\* artifacts\windows-msvc\ /E /I
        copy build\src\glmark2*.exe artifacts\windows-msvc\ 2>nul || echo "No exe files found in build directory"
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: glmark2-windows-msvc
        path: artifacts/windows-msvc/
